AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Lambda App

Resources:
  # MyVPC:
  #   Type: AWS::EC2::VPC
  #   Properties:
  #     CidrBlock: 10.0.0.0/16

  # MySubnet:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref MyVPC
  #     CidrBlock: 10.0.0.0/24

  MyElasticacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for ElastiCache
      SubnetIds:
        - subnet-02c217f126c0ce1d5

  MyElasticacheRedis:
    Type: 'AWS::ElastiCache::CacheCluster'
    Properties:
      CacheNodeType: cache.t2.micro
      Engine: redis
      NumCacheNodes: 1
      Port: 6379
      VpcSecurityGroupIds:
        - !GetAtt MySecurityGroup.GroupId
      CacheSubnetGroupName: !Ref MyElasticacheSubnetGroup

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda function
      VpcId: vpc-066e6a637e37f2752
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 0.0.0.0/0  # This allows access from any IP, modify as needed

  ArecLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ArecLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

  # Function to handle POST requests for sending payments
  SendPaymentFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: sendPaymentHandler.sendPaymentHandler
      Runtime: nodejs20.x
      CodeUri: .
      Environment:
        Variables:
          REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
          REDIS_PORT: !GetAtt MyElasticacheRedis.RedisEndpoint.Port
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt MySecurityGroup.GroupId
        SubnetIds:
          - subnet-02c217f126c0ce1d5
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            Path: /sendPayment
            Method: post
      Role: arn:aws:iam::730335528058:role/ArecLambdaRole

  # Function to handle GET requests for payment by ID
  GetPaymentFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: getPaymentHandler.getPaymentHandler
      Runtime: nodejs20.x
      CodeUri: .
      Environment:
        Variables:
          REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
          REDIS_PORT: !GetAtt MyElasticacheRedis.RedisEndpoint.Port
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt MySecurityGroup.GroupId
        SubnetIds:
          - subnet-02c217f126c0ce1d5
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            Path: /getPayment/{paymentId}
            Method: get
      Role: arn:aws:iam::730335528058:role/ArecLambdaRole

  # # Function to handle GET requests for payments per customer
  # GetPaymentsPerCustomerFunction:
  #   Type: 'AWS::Serverless::Function'
  #   Properties:
  #     Handler: getPaymentsPerCustomerHandler.getPaymentsPerCustomerHandler
  #     Runtime: nodejs20.x
  #     CodeUri: .
  #     Environment:
  #       Variables:
  #         REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
  #     Events:
  #       GetPaymentsPerCustomerEvent:
  #         Type: Api
  #         Properties:
  #           Path: /getPaymentsPerCustomer/{customerId}
  #           Method: get

  # # Function to handle POST requests for orders
  # AddOrderFunction:
  #   Type: 'AWS::Serverless::Function'
  #   Properties:
  #     Handler: addOrderHandler.addOrderHandler
  #     Runtime: nodejs20.x
  #     CodeUri: .
  #     Environment:
  #       Variables:
  #         REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
  #     Events:
  #       AddOrderEvent:
  #         Type: Api
  #         Properties:
  #           Path: /addOrder
  #           Method: post

  # # Function to handle GET requests for orders by ID
  # GetOrderFunction:
  #   Type: 'AWS::Serverless::Function'
  #   Properties:
  #     Handler: getOrderHandler.getOrderHandler
  #     Runtime: nodejs20.x
  #     CodeUri: .
  #     Environment:
  #       Variables:
  #         REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
  #     Events:
  #       GetOrderEvent:
  #         Type: Api
  #         Properties:
  #           Path: /getOrder/{orderId}
  #           Method: get

  # # Function to handle POST requests for order items
  # AddOrderItemFunction:
  #   Type: 'AWS::Serverless::Function'
  #   Properties:
  #     Handler: addOrderItemHandler.addOrderItemHandler
  #     Runtime: nodejs20.x
  #     CodeUri: .
  #     Environment:
  #       Variables:
  #         REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
  #     Events:
  #       AddOrderItemEvent:
  #         Type: Api
  #         Properties:
  #           Path: /addOrderItem
  #           Method: post
